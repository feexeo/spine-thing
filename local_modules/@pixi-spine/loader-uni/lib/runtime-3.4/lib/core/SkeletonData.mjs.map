{"version":3,"file":"SkeletonData.mjs","sources":["../../../../../runtime-3.4/lib/core/SkeletonData.mjs"],"sourcesContent":["class SkeletonData {\n  constructor() {\n    this.bones = new Array();\n    // Ordered parents first.\n    this.slots = new Array();\n    // Setup pose draw order.\n    this.skins = new Array();\n    this.events = new Array();\n    this.animations = new Array();\n    this.ikConstraints = new Array();\n    this.transformConstraints = new Array();\n    this.pathConstraints = new Array();\n    // Nonessential\n    this.fps = 0;\n  }\n  findBone(boneName) {\n    if (boneName == null)\n      throw new Error(\"boneName cannot be null.\");\n    const bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++) {\n      const bone = bones[i];\n      if (bone.name == boneName)\n        return bone;\n    }\n    return null;\n  }\n  findBoneIndex(boneName) {\n    if (boneName == null)\n      throw new Error(\"boneName cannot be null.\");\n    const bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++)\n      if (bones[i].name == boneName)\n        return i;\n    return -1;\n  }\n  findSlot(slotName) {\n    if (slotName == null)\n      throw new Error(\"slotName cannot be null.\");\n    const slots = this.slots;\n    for (let i = 0, n = slots.length; i < n; i++) {\n      const slot = slots[i];\n      if (slot.name == slotName)\n        return slot;\n    }\n    return null;\n  }\n  findSlotIndex(slotName) {\n    if (slotName == null)\n      throw new Error(\"slotName cannot be null.\");\n    const slots = this.slots;\n    for (let i = 0, n = slots.length; i < n; i++)\n      if (slots[i].name == slotName)\n        return i;\n    return -1;\n  }\n  findSkin(skinName) {\n    if (skinName == null)\n      throw new Error(\"skinName cannot be null.\");\n    const skins = this.skins;\n    for (let i = 0, n = skins.length; i < n; i++) {\n      const skin = skins[i];\n      if (skin.name == skinName)\n        return skin;\n    }\n    return null;\n  }\n  findEvent(eventDataName) {\n    if (eventDataName == null)\n      throw new Error(\"eventDataName cannot be null.\");\n    const events = this.events;\n    for (let i = 0, n = events.length; i < n; i++) {\n      const event = events[i];\n      if (event.name == eventDataName)\n        return event;\n    }\n    return null;\n  }\n  findAnimation(animationName) {\n    if (animationName == null)\n      throw new Error(\"animationName cannot be null.\");\n    const animations = this.animations;\n    for (let i = 0, n = animations.length; i < n; i++) {\n      const animation = animations[i];\n      if (animation.name == animationName)\n        return animation;\n    }\n    return null;\n  }\n  findIkConstraint(constraintName) {\n    if (constraintName == null)\n      throw new Error(\"constraintName cannot be null.\");\n    const ikConstraints = this.ikConstraints;\n    for (let i = 0, n = ikConstraints.length; i < n; i++) {\n      const constraint = ikConstraints[i];\n      if (constraint.name == constraintName)\n        return constraint;\n    }\n    return null;\n  }\n  findTransformConstraint(constraintName) {\n    if (constraintName == null)\n      throw new Error(\"constraintName cannot be null.\");\n    const transformConstraints = this.transformConstraints;\n    for (let i = 0, n = transformConstraints.length; i < n; i++) {\n      const constraint = transformConstraints[i];\n      if (constraint.name == constraintName)\n        return constraint;\n    }\n    return null;\n  }\n  findPathConstraint(constraintName) {\n    if (constraintName == null)\n      throw new Error(\"constraintName cannot be null.\");\n    const pathConstraints = this.pathConstraints;\n    for (let i = 0, n = pathConstraints.length; i < n; i++) {\n      const constraint = pathConstraints[i];\n      if (constraint.name == constraintName)\n        return constraint;\n    }\n    return null;\n  }\n  findPathConstraintIndex(pathConstraintName) {\n    if (pathConstraintName == null)\n      throw new Error(\"pathConstraintName cannot be null.\");\n    const pathConstraints = this.pathConstraints;\n    for (let i = 0, n = pathConstraints.length; i < n; i++)\n      if (pathConstraints[i].name == pathConstraintName)\n        return i;\n    return -1;\n  }\n}\n\nexport { SkeletonData };\n//# sourceMappingURL=SkeletonData.mjs.map\n"],"names":[],"mappings":"AAAA,MAAM,YAAY,CAAC;AACnB,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B;AACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B;AACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;AAClC,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAE,CAAC;AACrC,IAAI,IAAI,CAAC,oBAAoB,GAAG,IAAI,KAAK,EAAE,CAAC;AAC5C,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,EAAE,CAAC;AACvC;AACA,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACjB,GAAG;AACH,EAAE,QAAQ,CAAC,QAAQ,EAAE;AACrB,IAAI,IAAI,QAAQ,IAAI,IAAI;AACxB,MAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAClD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ;AAC/B,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,aAAa,CAAC,QAAQ,EAAE;AAC1B,IAAI,IAAI,QAAQ,IAAI,IAAI;AACxB,MAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAClD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAChD,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ;AACnC,QAAQ,OAAO,CAAC,CAAC;AACjB,IAAI,OAAO,CAAC,CAAC,CAAC;AACd,GAAG;AACH,EAAE,QAAQ,CAAC,QAAQ,EAAE;AACrB,IAAI,IAAI,QAAQ,IAAI,IAAI;AACxB,MAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAClD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ;AAC/B,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,aAAa,CAAC,QAAQ,EAAE;AAC1B,IAAI,IAAI,QAAQ,IAAI,IAAI;AACxB,MAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAClD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAChD,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ;AACnC,QAAQ,OAAO,CAAC,CAAC;AACjB,IAAI,OAAO,CAAC,CAAC,CAAC;AACd,GAAG;AACH,EAAE,QAAQ,CAAC,QAAQ,EAAE;AACrB,IAAI,IAAI,QAAQ,IAAI,IAAI;AACxB,MAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAClD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ;AAC/B,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,SAAS,CAAC,aAAa,EAAE;AAC3B,IAAI,IAAI,aAAa,IAAI,IAAI;AAC7B,MAAM,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;AACvD,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACnD,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9B,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa;AACrC,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,aAAa,CAAC,aAAa,EAAE;AAC/B,IAAI,IAAI,aAAa,IAAI,IAAI;AAC7B,MAAM,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;AACvD,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACvC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACvD,MAAM,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACtC,MAAM,IAAI,SAAS,CAAC,IAAI,IAAI,aAAa;AACzC,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,gBAAgB,CAAC,cAAc,EAAE;AACnC,IAAI,IAAI,cAAc,IAAI,IAAI;AAC9B,MAAM,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACxD,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1D,MAAM,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAC1C,MAAM,IAAI,UAAU,CAAC,IAAI,IAAI,cAAc;AAC3C,QAAQ,OAAO,UAAU,CAAC;AAC1B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,uBAAuB,CAAC,cAAc,EAAE;AAC1C,IAAI,IAAI,cAAc,IAAI,IAAI;AAC9B,MAAM,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACxD,IAAI,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;AAC3D,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACjE,MAAM,MAAM,UAAU,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;AACjD,MAAM,IAAI,UAAU,CAAC,IAAI,IAAI,cAAc;AAC3C,QAAQ,OAAO,UAAU,CAAC;AAC1B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,kBAAkB,CAAC,cAAc,EAAE;AACrC,IAAI,IAAI,cAAc,IAAI,IAAI;AAC9B,MAAM,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACxD,IAAI,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AACjD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC5D,MAAM,MAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;AAC5C,MAAM,IAAI,UAAU,CAAC,IAAI,IAAI,cAAc;AAC3C,QAAQ,OAAO,UAAU,CAAC;AAC1B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,uBAAuB,CAAC,kBAAkB,EAAE;AAC9C,IAAI,IAAI,kBAAkB,IAAI,IAAI;AAClC,MAAM,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;AAC5D,IAAI,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AACjD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC1D,MAAM,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,kBAAkB;AACvD,QAAQ,OAAO,CAAC,CAAC;AACjB,IAAI,OAAO,CAAC,CAAC,CAAC;AACd,GAAG;AACH;;;;"}